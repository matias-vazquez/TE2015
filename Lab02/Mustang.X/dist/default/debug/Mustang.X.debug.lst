

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jun 27 14:17:38 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.35
    17                           ; Generated 05/05/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K50 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _TRISD	set	3989
    52  0000                     _TRISC	set	3988
    53  0000                     _TRISB	set	3987
    54  0000                     _LATC	set	3979
    55  0000                     _LATB	set	3978
    56  0000                     _LATBbits	set	3978
    57  0000                     _ANSELA	set	3931
    58  0000                     _ANSELB	set	3932
    59  0000                     _ANSELC	set	3933
    60  0000                     _ANSELD	set	3934
    61  0000                     _LATA	set	3977
    62  0000                     _LATD	set	3980
    63  0000                     _LATE	set	3981
    64  0000                     _TRISA	set	3986
    65  0000                     _TRISE	set	3990
    66  0000                     _OSCTUNE	set	3995
    67  0000                     _OSCCON2	set	4050
    68  0000                     _OSCCON	set	4051
    69  0000                     _INTCON2bits	set	4081
    70  0000                     _WPUB	set	3973
    71  0000                     _ANSELE	set	3935
    72  0000                     _INTCONbits	set	4082
    73  0000                     _ACTCON	set	4021
    74                           
    75                           ; #config settings
    76                           
    77                           	psect	cinit
    78  007F76                     __pcinit:
    79                           	callstack 0
    80  007F76                     start_initialization:
    81                           	callstack 0
    82  007F76                     __initialization:
    83                           	callstack 0
    84  007F76                     end_of_initialization:
    85                           	callstack 0
    86  007F76                     __end_of__initialization:
    87                           	callstack 0
    88  007F76  0100               	movlb	0
    89  007F78  EFCC  F03F         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	cstackCOMRAM
    92  000000                     __pcstackCOMRAM:
    93                           	callstack 0
    94  000000                     
    95                           ; 1 bytes @ 0x0
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 50 in file "main.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2, cstack
   110 ;; Tracked objects:
   111 ;;		On entry : 0/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   115 ;;      Params:         0       0       0       0       0       0       0       0       0
   116 ;;      Locals:         0       0       0       0       0       0       0       0       0
   117 ;;      Temps:          0       0       0       0       0       0       0       0       0
   118 ;;      Totals:         0       0       0       0       0       0       0       0       0
   119 ;;Total ram usage:        0 bytes
   120 ;; Hardware stack levels required when called: 2
   121 ;; This function calls:
   122 ;;		_SYSTEM_Initialize
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129  007F98                     __ptext0:
   130                           	callstack 0
   131  007F98                     _main:
   132                           	callstack 29
   133  007F98                     
   134                           ;main.c: 53:     SYSTEM_Initialize();
   135  007F98  ECBE  F03F         	call	_SYSTEM_Initialize	;wreg free
   136  007F9C                     l776:
   137  007F9C  868A               	bsf	138,3,c	;volatile
   138  007F9E  888A               	bsf	138,4,c	;volatile
   139  007FA0                     
   140                           ;main.c: 76:         _delay((unsigned long)((100)*(31500/4000.0)));
   141  007FA0  0E9D               	movlw	157
   142  007FA2                     u17:
   143  007FA2  D000               	nop2	
   144  007FA4  2EE8               	decfsz	wreg,f,c
   145  007FA6  D7FD               	bra	u17
   146  007FA8  D000               	nop2	
   147  007FAA  868A               	bsf	138,3,c	;volatile
   148  007FAC  8A8A               	bsf	138,5,c	;volatile
   149  007FAE                     
   150                           ;main.c: 79:         _delay((unsigned long)((100)*(31500/4000.0)));
   151  007FAE  0E9D               	movlw	157
   152  007FB0                     u27:
   153  007FB0  D000               	nop2	
   154  007FB2  2EE8               	decfsz	wreg,f,c
   155  007FB4  D7FD               	bra	u27
   156  007FB6  D000               	nop2	
   157  007FB8  EFCE  F03F         	goto	l776
   158  007FBC  EF00  F000         	goto	start
   159  007FC0                     __end_of_main:
   160                           	callstack 0
   161                           
   162 ;; *************** function _SYSTEM_Initialize *****************
   163 ;; Defined at:
   164 ;;		line 50 in file "mcc_generated_files/mcc.c"
   165 ;; Parameters:    Size  Location     Type
   166 ;;		None
   167 ;; Auto vars:     Size  Location     Type
   168 ;;		None
   169 ;; Return value:  Size  Location     Type
   170 ;;                  1    wreg      void 
   171 ;; Registers used:
   172 ;;		wreg, status,2, cstack
   173 ;; Tracked objects:
   174 ;;		On entry : 0/0
   175 ;;		On exit  : 0/0
   176 ;;		Unchanged: 0/0
   177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   178 ;;      Params:         0       0       0       0       0       0       0       0       0
   179 ;;      Locals:         0       0       0       0       0       0       0       0       0
   180 ;;      Temps:          0       0       0       0       0       0       0       0       0
   181 ;;      Totals:         0       0       0       0       0       0       0       0       0
   182 ;;Total ram usage:        0 bytes
   183 ;; Hardware stack levels used: 1
   184 ;; Hardware stack levels required when called: 1
   185 ;; This function calls:
   186 ;;		_OSCILLATOR_Initialize
   187 ;;		_PIN_MANAGER_Initialize
   188 ;; This function is called by:
   189 ;;		_main
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           	psect	text1
   194  007F7C                     __ptext1:
   195                           	callstack 0
   196  007F7C                     _SYSTEM_Initialize:
   197                           	callstack 29
   198  007F7C                     
   199                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   200  007F7C  ECE0  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
   201                           
   202                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   203  007F80  ECC3  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   204  007F84  0012               	return		;funcret
   205  007F86                     __end_of_SYSTEM_Initialize:
   206                           	callstack 0
   207                           
   208 ;; *************** function _PIN_MANAGER_Initialize *****************
   209 ;; Defined at:
   210 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, status,2
   219 ;; Tracked objects:
   220 ;;		On entry : 0/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   224 ;;      Params:         0       0       0       0       0       0       0       0       0
   225 ;;      Locals:         0       0       0       0       0       0       0       0       0
   226 ;;      Temps:          0       0       0       0       0       0       0       0       0
   227 ;;      Totals:         0       0       0       0       0       0       0       0       0
   228 ;;Total ram usage:        0 bytes
   229 ;; Hardware stack levels used: 1
   230 ;; This function calls:
   231 ;;		Nothing
   232 ;; This function is called by:
   233 ;;		_SYSTEM_Initialize
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	text2
   238  007FC0                     __ptext2:
   239                           	callstack 0
   240  007FC0                     _PIN_MANAGER_Initialize:
   241                           	callstack 29
   242  007FC0                     
   243                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   244  007FC0  0E00               	movlw	0
   245  007FC2  6E8D               	movwf	141,c	;volatile
   246                           
   247                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   248  007FC4  0E00               	movlw	0
   249  007FC6  6E8C               	movwf	140,c	;volatile
   250                           
   251                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   252  007FC8  0E00               	movlw	0
   253  007FCA  6E89               	movwf	137,c	;volatile
   254                           
   255                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   256  007FCC  0E00               	movlw	0
   257  007FCE  6E8A               	movwf	138,c	;volatile
   258                           
   259                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   260  007FD0  0E00               	movlw	0
   261  007FD2  6E8B               	movwf	139,c	;volatile
   262                           
   263                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   264  007FD4  0E07               	movlw	7
   265  007FD6  6E96               	movwf	150,c	;volatile
   266  007FD8                     
   267                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   268  007FD8  6892               	setf	146,c	;volatile
   269                           
   270                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x00;
   271  007FDA  0E00               	movlw	0
   272  007FDC  6E93               	movwf	147,c	;volatile
   273                           
   274                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xC7;
   275  007FDE  0EC7               	movlw	199
   276  007FE0  6E94               	movwf	148,c	;volatile
   277  007FE2                     
   278                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   279  007FE2  6895               	setf	149,c	;volatile
   280  007FE4                     
   281                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
   282  007FE4  010F               	movlb	15	; () banked
   283  007FE6  695E               	setf	94,b	;volatile
   284                           
   285                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC4;
   286  007FE8  0EC4               	movlw	196
   287  007FEA  6F5D               	movwf	93,b	;volatile
   288                           
   289                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
   290  007FEC  0E00               	movlw	0
   291  007FEE  6F5C               	movwf	92,b	;volatile
   292                           
   293                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   294  007FF0  0E07               	movlw	7
   295  007FF2  6F5F               	movwf	95,b	;volatile
   296                           
   297                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
   298  007FF4  0E2F               	movlw	47
   299  007FF6  6F5B               	movwf	91,b	;volatile
   300                           
   301                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   302  007FF8  0E00               	movlw	0
   303  007FFA  6E85               	movwf	133,c	;volatile
   304  007FFC                     
   305                           ; BSR set to: 15
   306                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
   307  007FFC  8EF1               	bsf	241,7,c	;volatile
   308  007FFE                     
   309                           ; BSR set to: 15
   310  007FFE  0012               	return		;funcret
   311  008000                     __end_of_PIN_MANAGER_Initialize:
   312                           	callstack 0
   313                           
   314 ;; *************** function _OSCILLATOR_Initialize *****************
   315 ;; Defined at:
   316 ;;		line 57 in file "mcc_generated_files/mcc.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		wreg, status,2
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   330 ;;      Params:         0       0       0       0       0       0       0       0       0
   331 ;;      Locals:         0       0       0       0       0       0       0       0       0
   332 ;;      Temps:          0       0       0       0       0       0       0       0       0
   333 ;;      Totals:         0       0       0       0       0       0       0       0       0
   334 ;;Total ram usage:        0 bytes
   335 ;; Hardware stack levels used: 1
   336 ;; This function calls:
   337 ;;		Nothing
   338 ;; This function is called by:
   339 ;;		_SYSTEM_Initialize
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           	psect	text3
   344  007F86                     __ptext3:
   345                           	callstack 0
   346  007F86                     _OSCILLATOR_Initialize:
   347                           	callstack 29
   348  007F86                     
   349                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x00;
   350  007F86  0E00               	movlw	0
   351  007F88  6ED3               	movwf	211,c	;volatile
   352                           
   353                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x00;
   354  007F8A  0E00               	movlw	0
   355  007F8C  6ED2               	movwf	210,c	;volatile
   356                           
   357                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
   358  007F8E  0E00               	movlw	0
   359  007F90  6E9B               	movwf	155,c	;volatile
   360                           
   361                           ;mcc_generated_files/mcc.c: 66:     ACTCON = 0x00;
   362  007F92  0E00               	movlw	0
   363  007F94  6EB5               	movwf	181,c	;volatile
   364  007F96  0012               	return		;funcret
   365  007F98                     __end_of_OSCILLATOR_Initialize:
   366                           	callstack 0
   367  0000                     
   368                           	psect	rparam
   369  0000                     
   370                           	psect	idloc
   371                           
   372                           ;Config register IDLOC0 @ 0x200000
   373                           ;	unspecified, using default values
   374  200000                     	org	2097152
   375  200000  FF                 	db	255
   376                           
   377                           ;Config register IDLOC1 @ 0x200001
   378                           ;	unspecified, using default values
   379  200001                     	org	2097153
   380  200001  FF                 	db	255
   381                           
   382                           ;Config register IDLOC2 @ 0x200002
   383                           ;	unspecified, using default values
   384  200002                     	org	2097154
   385  200002  FF                 	db	255
   386                           
   387                           ;Config register IDLOC3 @ 0x200003
   388                           ;	unspecified, using default values
   389  200003                     	org	2097155
   390  200003  FF                 	db	255
   391                           
   392                           ;Config register IDLOC4 @ 0x200004
   393                           ;	unspecified, using default values
   394  200004                     	org	2097156
   395  200004  FF                 	db	255
   396                           
   397                           ;Config register IDLOC5 @ 0x200005
   398                           ;	unspecified, using default values
   399  200005                     	org	2097157
   400  200005  FF                 	db	255
   401                           
   402                           ;Config register IDLOC6 @ 0x200006
   403                           ;	unspecified, using default values
   404  200006                     	org	2097158
   405  200006  FF                 	db	255
   406                           
   407                           ;Config register IDLOC7 @ 0x200007
   408                           ;	unspecified, using default values
   409  200007                     	org	2097159
   410  200007  FF                 	db	255
   411                           
   412                           	psect	config
   413                           
   414                           ;Config register CONFIG1L @ 0x300000
   415                           ;	PLL Selection
   416                           ;	PLLSEL = PLL4X, 4x clock multiplier
   417                           ;	PLL Enable Configuration bit
   418                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   419                           ;	CPU System Clock Postscaler
   420                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   421                           ;	Low Speed USB mode with 48 MHz system clock
   422                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   423  300000                     	org	3145728
   424  300000  00                 	db	0
   425                           
   426                           ;Config register CONFIG1H @ 0x300001
   427                           ;	Oscillator Selection
   428                           ;	FOSC = INTOSCIO, Internal oscillator
   429                           ;	Primary Oscillator Shutdown
   430                           ;	PCLKEN = ON, Primary oscillator enabled
   431                           ;	Fail-Safe Clock Monitor
   432                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   433                           ;	Internal/External Oscillator Switchover
   434                           ;	IESO = OFF, Oscillator Switchover mode disabled
   435  300001                     	org	3145729
   436  300001  28                 	db	40
   437                           
   438                           ;Config register CONFIG2L @ 0x300002
   439                           ;	Power-up Timer Enable
   440                           ;	nPWRTEN = OFF, Power up timer disabled
   441                           ;	Brown-out Reset Enable
   442                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   443                           ;	Brown-out Reset Voltage
   444                           ;	BORV = 190, BOR set to 1.9V nominal
   445                           ;	Low-Power Brown-out Reset
   446                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   447  300002                     	org	3145730
   448  300002  5F                 	db	95
   449                           
   450                           ;Config register CONFIG2H @ 0x300003
   451                           ;	Watchdog Timer Enable bits
   452                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   453                           ;	Watchdog Timer Postscaler
   454                           ;	WDTPS = 32768, 1:32768
   455  300003                     	org	3145731
   456  300003  3C                 	db	60
   457                           
   458                           ; Padding undefined space
   459  300004                     	org	3145732
   460  300004  FF                 	db	255
   461                           
   462                           ;Config register CONFIG3H @ 0x300005
   463                           ;	CCP2 MUX bit
   464                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   465                           ;	PORTB A/D Enable bit
   466                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   467                           ;	Timer3 Clock Input MUX bit
   468                           ;	T3CMX = RC0, T3CKI function is on RC0
   469                           ;	SDO Output MUX bit
   470                           ;	SDOMX = RB3, SDO function is on RB3
   471                           ;	Master Clear Reset Pin Enable
   472                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   473  300005                     	org	3145733
   474  300005  D3                 	db	211
   475                           
   476                           ;Config register CONFIG4L @ 0x300006
   477                           ;	Stack Full/Underflow Reset
   478                           ;	STVREN = ON, Stack full/underflow will cause Reset
   479                           ;	Single-Supply ICSP Enable bit
   480                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   481                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   482                           ;	ICPRT = OFF, ICPORT disabled
   483                           ;	Extended Instruction Set Enable bit
   484                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   485                           ;	Background Debugger Enable bit
   486                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   487  300006                     	org	3145734
   488  300006  85                 	db	133
   489                           
   490                           ; Padding undefined space
   491  300007                     	org	3145735
   492  300007  FF                 	db	255
   493                           
   494                           ;Config register CONFIG5L @ 0x300008
   495                           ;	Block 0 Code Protect
   496                           ;	CP0 = OFF, Block 0 is not code-protected
   497                           ;	Block 1 Code Protect
   498                           ;	CP1 = OFF, Block 1 is not code-protected
   499                           ;	Block 2 Code Protect
   500                           ;	CP2 = OFF, Block 2 is not code-protected
   501                           ;	Block 3 Code Protect
   502                           ;	CP3 = OFF, Block 3 is not code-protected
   503  300008                     	org	3145736
   504  300008  0F                 	db	15
   505                           
   506                           ;Config register CONFIG5H @ 0x300009
   507                           ;	Boot Block Code Protect
   508                           ;	CPB = OFF, Boot block is not code-protected
   509                           ;	Data EEPROM Code Protect
   510                           ;	CPD = OFF, Data EEPROM is not code-protected
   511  300009                     	org	3145737
   512  300009  C0                 	db	192
   513                           
   514                           ;Config register CONFIG6L @ 0x30000A
   515                           ;	Block 0 Write Protect
   516                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   517                           ;	Block 1 Write Protect
   518                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   519                           ;	Block 2 Write Protect
   520                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   521                           ;	Block 3 Write Protect
   522                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   523  30000A                     	org	3145738
   524  30000A  0F                 	db	15
   525                           
   526                           ;Config register CONFIG6H @ 0x30000B
   527                           ;	Configuration Registers Write Protect
   528                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   529                           ;	Boot Block Write Protect
   530                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   531                           ;	Data EEPROM Write Protect
   532                           ;	WRTD = OFF, Data EEPROM is not write-protected
   533  30000B                     	org	3145739
   534  30000B  E0                 	db	224
   535                           
   536                           ;Config register CONFIG7L @ 0x30000C
   537                           ;	Block 0 Table Read Protect
   538                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   539                           ;	Block 1 Table Read Protect
   540                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   541                           ;	Block 2 Table Read Protect
   542                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   543                           ;	Block 3 Table Read Protect
   544                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   545  30000C                     	org	3145740
   546  30000C  0F                 	db	15
   547                           
   548                           ;Config register CONFIG7H @ 0x30000D
   549                           ;	Boot Block Table Read Protect
   550                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   551  30000D                     	org	3145741
   552  30000D  40                 	db	64
   553                           tosu	equ	0xFFF
   554                           tosh	equ	0xFFE
   555                           tosl	equ	0xFFD
   556                           stkptr	equ	0xFFC
   557                           pclatu	equ	0xFFB
   558                           pclath	equ	0xFFA
   559                           pcl	equ	0xFF9
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           prodh	equ	0xFF4
   565                           prodl	equ	0xFF3
   566                           indf0	equ	0xFEF
   567                           postinc0	equ	0xFEE
   568                           postdec0	equ	0xFED
   569                           preinc0	equ	0xFEC
   570                           plusw0	equ	0xFEB
   571                           fsr0h	equ	0xFEA
   572                           fsr0l	equ	0xFE9
   573                           wreg	equ	0xFE8
   574                           indf1	equ	0xFE7
   575                           postinc1	equ	0xFE6
   576                           postdec1	equ	0xFE5
   577                           preinc1	equ	0xFE4
   578                           plusw1	equ	0xFE3
   579                           fsr1h	equ	0xFE2
   580                           fsr1l	equ	0xFE1
   581                           bsr	equ	0xFE0
   582                           indf2	equ	0xFDF
   583                           postinc2	equ	0xFDE
   584                           postdec2	equ	0xFDD
   585                           preinc2	equ	0xFDC
   586                           plusw2	equ	0xFDB
   587                           fsr2h	equ	0xFDA
   588                           fsr2l	equ	0xFD9
   589                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhhlh       1D      0       0      21        0.0%
BITBIGSFRhhllhh     1C      0       0      22        0.0%
BITBIGSFRhhllhl     19      0       0      23        0.0%
BITBIGSFRhhlll       4      0       0      24        0.0%
BITBIGSFRhll         4      0       0      25        0.0%
BITBIGSFRllhh        3      0       0      26        0.0%
BITBIGSFRllhl       25      0       0      27        0.0%
BITBIGSFRlll         8      0       0      28        0.0%
ABS                  0      0       0      29        0.0%
BIGRAM             7FF      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jun 27 14:17:38 2022

                            l39 7FFE                              l82 7F96                              l79 7F84  
                            u17 7FA2                              u27 7FB0                             l760 7FD8  
                           l762 7FE2                             l770 7F7C                             l764 7FE4  
                           l780 7FA0                             l766 7FFC                             l758 7FC0  
                           l782 7FAA                             l774 7F98                             l768 7F86  
                           l784 7FAC                             l776 7F9C                             l786 7FAE  
                           l778 7F9E                             wreg 000FE8                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            _WPUB 000F85                            _main 7F98  
                          start 0000                    ___param_bank 000000   __end_of_OSCILLATOR_Initialize 7F98  
                         ?_main 0000                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
               __initialization 7F76                    __end_of_main 7FC0                          ??_main 0000  
                 __activetblptr 000000                          _ACTCON 000FB5                          _ANSELA 000F5B  
                        _ANSELB 000F5C                          _ANSELC 000F5D                          _ANSELD 000F5E  
                        _ANSELE 000F5F                          _OSCCON 000FD3                          isa$std 000001  
             _SYSTEM_Initialize 7F7C                      __accesstop 0060         __end_of__initialization 7F76  
            ?_SYSTEM_Initialize 0000                   ___rparam_used 000001                  __pcstackCOMRAM 0000  
           ??_SYSTEM_Initialize 0000       __end_of_SYSTEM_Initialize 7F86                         _OSCCON2 000FD2  
                       _OSCTUNE 000F9B                         __Hparam 0000                         __Lparam 0000  
                       __pcinit 7F76                         __ramtop 0800                         __ptext0 7F98  
                       __ptext1 7F7C                         __ptext2 7FC0                         __ptext3 7F86  
         _OSCILLATOR_Initialize 7F86        ??_PIN_MANAGER_Initialize 0000            end_of_initialization 7F76  
        ?_OSCILLATOR_Initialize 0000             start_initialization 7F76          _PIN_MANAGER_Initialize 7FC0  
                      _LATBbits 000F8A                     _INTCON2bits 000FF1                        __Hrparam 0000  
                      __Lrparam 0000         ??_OSCILLATOR_Initialize 0000                        isa$xinst 000000  
                    _INTCONbits 000FF2         ?_PIN_MANAGER_Initialize 0000  __end_of_PIN_MANAGER_Initialize 8000  
