

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jun 27 13:16:40 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.35
    17                           ; Generated 05/05/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K50 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _TRISD	set	3989
    52  0000                     _TRISC	set	3988
    53  0000                     _TRISB	set	3987
    54  0000                     _LATC	set	3979
    55  0000                     _LATB	set	3978
    56  0000                     _ANSELA	set	3931
    57  0000                     _ANSELB	set	3932
    58  0000                     _ANSELC	set	3933
    59  0000                     _ANSELD	set	3934
    60  0000                     _LATA	set	3977
    61  0000                     _LATD	set	3980
    62  0000                     _LATE	set	3981
    63  0000                     _TRISA	set	3986
    64  0000                     _TRISE	set	3990
    65  0000                     _OSCTUNE	set	3995
    66  0000                     _OSCCON2	set	4050
    67  0000                     _OSCCON	set	4051
    68  0000                     _INTCON2bits	set	4081
    69  0000                     _WPUB	set	3973
    70  0000                     _ANSELE	set	3935
    71  0000                     _INTCONbits	set	4082
    72  0000                     _ACTCON	set	4021
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77  007F42                     __pcinit:
    78                           	callstack 0
    79  007F42                     start_initialization:
    80                           	callstack 0
    81  007F42                     __initialization:
    82                           	callstack 0
    83  007F42                     end_of_initialization:
    84                           	callstack 0
    85  007F42                     __end_of__initialization:
    86                           	callstack 0
    87  007F42  0100               	movlb	0
    88  007F44  EFD2  F03F         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	cstackCOMRAM
    91  000001                     __pcstackCOMRAM:
    92                           	callstack 0
    93  000001                     main@pos:
    94                           	callstack 0
    95                           
    96                           ; 1 bytes @ 0x0
    97  000001                     	ds	1
    98  000002                     main@i:
    99                           	callstack 0
   100                           
   101                           ; 1 bytes @ 0x1
   102  000002                     	ds	1
   103                           
   104 ;;
   105 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   106 ;;
   107 ;; *************** function _main *****************
   108 ;; Defined at:
   109 ;;		line 54 in file "main.c"
   110 ;; Parameters:    Size  Location     Type
   111 ;;		None
   112 ;; Auto vars:     Size  Location     Type
   113 ;;  i               1    1[COMRAM] unsigned char 
   114 ;;  pos             1    0[COMRAM] unsigned char 
   115 ;; Return value:  Size  Location     Type
   116 ;;                  1    wreg      void 
   117 ;; Registers used:
   118 ;;		wreg, status,2, status,0, cstack
   119 ;; Tracked objects:
   120 ;;		On entry : 0/0
   121 ;;		On exit  : 0/0
   122 ;;		Unchanged: 0/0
   123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   124 ;;      Params:         0       0       0       0       0       0       0       0       0
   125 ;;      Locals:         2       0       0       0       0       0       0       0       0
   126 ;;      Temps:          0       0       0       0       0       0       0       0       0
   127 ;;      Totals:         2       0       0       0       0       0       0       0       0
   128 ;;Total ram usage:        2 bytes
   129 ;; Hardware stack levels required when called: 2
   130 ;; This function calls:
   131 ;;		_SYSTEM_Initialize
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           	psect	text0
   138  007FA4                     __ptext0:
   139                           	callstack 0
   140  007FA4                     _main:
   141                           	callstack 29
   142  007FA4                     
   143                           ;main.c: 57:     SYSTEM_Initialize();
   144  007FA4  ECA4  F03F         	call	_SYSTEM_Initialize	;wreg free
   145  007FA8                     l772:
   146                           
   147                           ;main.c: 76:     {;main.c: 78:         char pos = 0x01;
   148  007FA8  0E01               	movlw	1
   149  007FAA  6E01               	movwf	main@pos^0,c
   150  007FAC                     
   151                           ;main.c: 79:         char i;;main.c: 80:         for (i=0; i<7; i++){
   152  007FAC  0E00               	movlw	0
   153  007FAE  6E02               	movwf	main@i^0,c
   154  007FB0                     l72:
   155                           
   156                           ;main.c: 81:             LATB = pos;
   157  007FB0  C001  FF8A         	movff	main@pos,3978	;volatile
   158  007FB4                     
   159                           ;main.c: 82:             _delay((unsigned long)((50)*(31500/4000.0)));
   160  007FB4  0E83               	movlw	131
   161  007FB6                     u37:
   162  007FB6  2EE8               	decfsz	wreg,f,c
   163  007FB8  D7FE               	bra	u37
   164  007FBA                     
   165                           ;main.c: 83:             pos = pos<<1;
   166  007FBA  5001               	movf	main@pos^0,w,c
   167  007FBC  2401               	addwf	main@pos^0,w,c
   168  007FBE  6E01               	movwf	main@pos^0,c
   169                           
   170                           ;main.c: 84:         }
   171  007FC0  2A02               	incf	main@i^0,f,c
   172  007FC2  0E06               	movlw	6
   173  007FC4  6402               	cpfsgt	main@i^0,c
   174  007FC6  EFE7  F03F         	goto	u11
   175  007FCA  EFE9  F03F         	goto	u10
   176  007FCE                     u11:
   177  007FCE  EFD8  F03F         	goto	l72
   178  007FD2                     u10:
   179  007FD2                     
   180                           ;main.c: 85:         for (i=7; i>0; i--){
   181  007FD2  0E07               	movlw	7
   182  007FD4  6E02               	movwf	main@i^0,c
   183  007FD6                     l74:
   184                           
   185                           ;main.c: 86:             LATB = pos;
   186  007FD6  C001  FF8A         	movff	main@pos,3978	;volatile
   187  007FDA                     
   188                           ;main.c: 87:             _delay((unsigned long)((50)*(31500/4000.0)));
   189  007FDA  0E83               	movlw	131
   190  007FDC                     u47:
   191  007FDC  2EE8               	decfsz	wreg,f,c
   192  007FDE  D7FE               	bra	u47
   193  007FE0                     
   194                           ;main.c: 88:             pos = pos>>1;
   195  007FE0  90D8               	bcf	status,0,c
   196  007FE2  3001               	rrcf	main@pos^0,w,c
   197  007FE4  6E01               	movwf	main@pos^0,c
   198                           
   199                           ;main.c: 89:         }
   200  007FE6  0602               	decf	main@i^0,f,c
   201  007FE8  5002               	movf	main@i^0,w,c
   202  007FEA  A4D8               	btfss	status,2,c
   203  007FEC  EFFA  F03F         	goto	u21
   204  007FF0  EFFC  F03F         	goto	u20
   205  007FF4                     u21:
   206  007FF4  EFEB  F03F         	goto	l74
   207  007FF8                     u20:
   208  007FF8  EFD4  F03F         	goto	l772
   209  007FFC  EF00  F000         	goto	start
   210  008000                     __end_of_main:
   211                           	callstack 0
   212                           
   213 ;; *************** function _SYSTEM_Initialize *****************
   214 ;; Defined at:
   215 ;;		line 50 in file "mcc_generated_files/mcc.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   229 ;;      Params:         0       0       0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels used: 1
   235 ;; Hardware stack levels required when called: 1
   236 ;; This function calls:
   237 ;;		_OSCILLATOR_Initialize
   238 ;;		_PIN_MANAGER_Initialize
   239 ;; This function is called by:
   240 ;;		_main
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text1
   245  007F48                     __ptext1:
   246                           	callstack 0
   247  007F48                     _SYSTEM_Initialize:
   248                           	callstack 29
   249  007F48                     
   250                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   251  007F48  ECB2  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
   252                           
   253                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   254  007F4C  ECA9  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   255  007F50  0012               	return		;funcret
   256  007F52                     __end_of_SYSTEM_Initialize:
   257                           	callstack 0
   258                           
   259 ;; *************** function _PIN_MANAGER_Initialize *****************
   260 ;; Defined at:
   261 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;		None
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, status,2
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   275 ;;      Params:         0       0       0       0       0       0       0       0       0
   276 ;;      Locals:         0       0       0       0       0       0       0       0       0
   277 ;;      Temps:          0       0       0       0       0       0       0       0       0
   278 ;;      Totals:         0       0       0       0       0       0       0       0       0
   279 ;;Total ram usage:        0 bytes
   280 ;; Hardware stack levels used: 1
   281 ;; This function calls:
   282 ;;		Nothing
   283 ;; This function is called by:
   284 ;;		_SYSTEM_Initialize
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           	psect	text2
   289  007F64                     __ptext2:
   290                           	callstack 0
   291  007F64                     _PIN_MANAGER_Initialize:
   292                           	callstack 29
   293  007F64                     
   294                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   295  007F64  0E00               	movlw	0
   296  007F66  6E8D               	movwf	141,c	;volatile
   297                           
   298                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   299  007F68  0E00               	movlw	0
   300  007F6A  6E8C               	movwf	140,c	;volatile
   301                           
   302                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   303  007F6C  0E00               	movlw	0
   304  007F6E  6E89               	movwf	137,c	;volatile
   305                           
   306                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   307  007F70  0E00               	movlw	0
   308  007F72  6E8A               	movwf	138,c	;volatile
   309                           
   310                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   311  007F74  0E00               	movlw	0
   312  007F76  6E8B               	movwf	139,c	;volatile
   313                           
   314                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   315  007F78  0E07               	movlw	7
   316  007F7A  6E96               	movwf	150,c	;volatile
   317  007F7C                     
   318                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   319  007F7C  6892               	setf	146,c	;volatile
   320                           
   321                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x00;
   322  007F7E  0E00               	movlw	0
   323  007F80  6E93               	movwf	147,c	;volatile
   324                           
   325                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xC7;
   326  007F82  0EC7               	movlw	199
   327  007F84  6E94               	movwf	148,c	;volatile
   328  007F86                     
   329                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   330  007F86  6895               	setf	149,c	;volatile
   331  007F88                     
   332                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
   333  007F88  010F               	movlb	15	; () banked
   334  007F8A  695E               	setf	94,b	;volatile
   335                           
   336                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC4;
   337  007F8C  0EC4               	movlw	196
   338  007F8E  6F5D               	movwf	93,b	;volatile
   339                           
   340                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
   341  007F90  0E00               	movlw	0
   342  007F92  6F5C               	movwf	92,b	;volatile
   343                           
   344                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   345  007F94  0E07               	movlw	7
   346  007F96  6F5F               	movwf	95,b	;volatile
   347                           
   348                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
   349  007F98  0E2F               	movlw	47
   350  007F9A  6F5B               	movwf	91,b	;volatile
   351                           
   352                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   353  007F9C  0E00               	movlw	0
   354  007F9E  6E85               	movwf	133,c	;volatile
   355  007FA0                     
   356                           ; BSR set to: 15
   357                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
   358  007FA0  8EF1               	bsf	241,7,c	;volatile
   359  007FA2                     
   360                           ; BSR set to: 15
   361  007FA2  0012               	return		;funcret
   362  007FA4                     __end_of_PIN_MANAGER_Initialize:
   363                           	callstack 0
   364                           
   365 ;; *************** function _OSCILLATOR_Initialize *****************
   366 ;; Defined at:
   367 ;;		line 57 in file "mcc_generated_files/mcc.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;		None
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, status,2
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   381 ;;      Params:         0       0       0       0       0       0       0       0       0
   382 ;;      Locals:         0       0       0       0       0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0       0       0
   384 ;;      Totals:         0       0       0       0       0       0       0       0       0
   385 ;;Total ram usage:        0 bytes
   386 ;; Hardware stack levels used: 1
   387 ;; This function calls:
   388 ;;		Nothing
   389 ;; This function is called by:
   390 ;;		_SYSTEM_Initialize
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           	psect	text3
   395  007F52                     __ptext3:
   396                           	callstack 0
   397  007F52                     _OSCILLATOR_Initialize:
   398                           	callstack 29
   399  007F52                     
   400                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x00;
   401  007F52  0E00               	movlw	0
   402  007F54  6ED3               	movwf	211,c	;volatile
   403                           
   404                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x00;
   405  007F56  0E00               	movlw	0
   406  007F58  6ED2               	movwf	210,c	;volatile
   407                           
   408                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
   409  007F5A  0E00               	movlw	0
   410  007F5C  6E9B               	movwf	155,c	;volatile
   411                           
   412                           ;mcc_generated_files/mcc.c: 66:     ACTCON = 0x00;
   413  007F5E  0E00               	movlw	0
   414  007F60  6EB5               	movwf	181,c	;volatile
   415  007F62  0012               	return		;funcret
   416  007F64                     __end_of_OSCILLATOR_Initialize:
   417                           	callstack 0
   418  0000                     
   419                           	psect	rparam
   420  0000                     
   421                           	psect	idloc
   422                           
   423                           ;Config register IDLOC0 @ 0x200000
   424                           ;	unspecified, using default values
   425  200000                     	org	2097152
   426  200000  FF                 	db	255
   427                           
   428                           ;Config register IDLOC1 @ 0x200001
   429                           ;	unspecified, using default values
   430  200001                     	org	2097153
   431  200001  FF                 	db	255
   432                           
   433                           ;Config register IDLOC2 @ 0x200002
   434                           ;	unspecified, using default values
   435  200002                     	org	2097154
   436  200002  FF                 	db	255
   437                           
   438                           ;Config register IDLOC3 @ 0x200003
   439                           ;	unspecified, using default values
   440  200003                     	org	2097155
   441  200003  FF                 	db	255
   442                           
   443                           ;Config register IDLOC4 @ 0x200004
   444                           ;	unspecified, using default values
   445  200004                     	org	2097156
   446  200004  FF                 	db	255
   447                           
   448                           ;Config register IDLOC5 @ 0x200005
   449                           ;	unspecified, using default values
   450  200005                     	org	2097157
   451  200005  FF                 	db	255
   452                           
   453                           ;Config register IDLOC6 @ 0x200006
   454                           ;	unspecified, using default values
   455  200006                     	org	2097158
   456  200006  FF                 	db	255
   457                           
   458                           ;Config register IDLOC7 @ 0x200007
   459                           ;	unspecified, using default values
   460  200007                     	org	2097159
   461  200007  FF                 	db	255
   462                           
   463                           	psect	config
   464                           
   465                           ;Config register CONFIG1L @ 0x300000
   466                           ;	PLL Selection
   467                           ;	PLLSEL = PLL4X, 4x clock multiplier
   468                           ;	PLL Enable Configuration bit
   469                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   470                           ;	CPU System Clock Postscaler
   471                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   472                           ;	Low Speed USB mode with 48 MHz system clock
   473                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   474  300000                     	org	3145728
   475  300000  00                 	db	0
   476                           
   477                           ;Config register CONFIG1H @ 0x300001
   478                           ;	Oscillator Selection
   479                           ;	FOSC = INTOSCIO, Internal oscillator
   480                           ;	Primary Oscillator Shutdown
   481                           ;	PCLKEN = ON, Primary oscillator enabled
   482                           ;	Fail-Safe Clock Monitor
   483                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   484                           ;	Internal/External Oscillator Switchover
   485                           ;	IESO = OFF, Oscillator Switchover mode disabled
   486  300001                     	org	3145729
   487  300001  28                 	db	40
   488                           
   489                           ;Config register CONFIG2L @ 0x300002
   490                           ;	Power-up Timer Enable
   491                           ;	nPWRTEN = OFF, Power up timer disabled
   492                           ;	Brown-out Reset Enable
   493                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   494                           ;	Brown-out Reset Voltage
   495                           ;	BORV = 190, BOR set to 1.9V nominal
   496                           ;	Low-Power Brown-out Reset
   497                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   498  300002                     	org	3145730
   499  300002  5F                 	db	95
   500                           
   501                           ;Config register CONFIG2H @ 0x300003
   502                           ;	Watchdog Timer Enable bits
   503                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   504                           ;	Watchdog Timer Postscaler
   505                           ;	WDTPS = 32768, 1:32768
   506  300003                     	org	3145731
   507  300003  3C                 	db	60
   508                           
   509                           ; Padding undefined space
   510  300004                     	org	3145732
   511  300004  FF                 	db	255
   512                           
   513                           ;Config register CONFIG3H @ 0x300005
   514                           ;	CCP2 MUX bit
   515                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   516                           ;	PORTB A/D Enable bit
   517                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   518                           ;	Timer3 Clock Input MUX bit
   519                           ;	T3CMX = RC0, T3CKI function is on RC0
   520                           ;	SDO Output MUX bit
   521                           ;	SDOMX = RB3, SDO function is on RB3
   522                           ;	Master Clear Reset Pin Enable
   523                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   524  300005                     	org	3145733
   525  300005  D3                 	db	211
   526                           
   527                           ;Config register CONFIG4L @ 0x300006
   528                           ;	Stack Full/Underflow Reset
   529                           ;	STVREN = ON, Stack full/underflow will cause Reset
   530                           ;	Single-Supply ICSP Enable bit
   531                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   532                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   533                           ;	ICPRT = OFF, ICPORT disabled
   534                           ;	Extended Instruction Set Enable bit
   535                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   536                           ;	Background Debugger Enable bit
   537                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   538  300006                     	org	3145734
   539  300006  85                 	db	133
   540                           
   541                           ; Padding undefined space
   542  300007                     	org	3145735
   543  300007  FF                 	db	255
   544                           
   545                           ;Config register CONFIG5L @ 0x300008
   546                           ;	Block 0 Code Protect
   547                           ;	CP0 = OFF, Block 0 is not code-protected
   548                           ;	Block 1 Code Protect
   549                           ;	CP1 = OFF, Block 1 is not code-protected
   550                           ;	Block 2 Code Protect
   551                           ;	CP2 = OFF, Block 2 is not code-protected
   552                           ;	Block 3 Code Protect
   553                           ;	CP3 = OFF, Block 3 is not code-protected
   554  300008                     	org	3145736
   555  300008  0F                 	db	15
   556                           
   557                           ;Config register CONFIG5H @ 0x300009
   558                           ;	Boot Block Code Protect
   559                           ;	CPB = OFF, Boot block is not code-protected
   560                           ;	Data EEPROM Code Protect
   561                           ;	CPD = OFF, Data EEPROM is not code-protected
   562  300009                     	org	3145737
   563  300009  C0                 	db	192
   564                           
   565                           ;Config register CONFIG6L @ 0x30000A
   566                           ;	Block 0 Write Protect
   567                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   568                           ;	Block 1 Write Protect
   569                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   570                           ;	Block 2 Write Protect
   571                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   572                           ;	Block 3 Write Protect
   573                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   574  30000A                     	org	3145738
   575  30000A  0F                 	db	15
   576                           
   577                           ;Config register CONFIG6H @ 0x30000B
   578                           ;	Configuration Registers Write Protect
   579                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   580                           ;	Boot Block Write Protect
   581                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   582                           ;	Data EEPROM Write Protect
   583                           ;	WRTD = OFF, Data EEPROM is not write-protected
   584  30000B                     	org	3145739
   585  30000B  E0                 	db	224
   586                           
   587                           ;Config register CONFIG7L @ 0x30000C
   588                           ;	Block 0 Table Read Protect
   589                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   590                           ;	Block 1 Table Read Protect
   591                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   592                           ;	Block 2 Table Read Protect
   593                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   594                           ;	Block 3 Table Read Protect
   595                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   596  30000C                     	org	3145740
   597  30000C  0F                 	db	15
   598                           
   599                           ;Config register CONFIG7H @ 0x30000D
   600                           ;	Boot Block Table Read Protect
   601                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   602  30000D                     	org	3145741
   603  30000D  40                 	db	64
   604                           tosu	equ	0xFFF
   605                           tosh	equ	0xFFE
   606                           tosl	equ	0xFFD
   607                           stkptr	equ	0xFFC
   608                           pclatu	equ	0xFFB
   609                           pclath	equ	0xFFA
   610                           pcl	equ	0xFF9
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           prodh	equ	0xFF4
   616                           prodl	equ	0xFF3
   617                           indf0	equ	0xFEF
   618                           postinc0	equ	0xFEE
   619                           postdec0	equ	0xFED
   620                           preinc0	equ	0xFEC
   621                           plusw0	equ	0xFEB
   622                           fsr0h	equ	0xFEA
   623                           fsr0l	equ	0xFE9
   624                           wreg	equ	0xFE8
   625                           indf1	equ	0xFE7
   626                           postinc1	equ	0xFE6
   627                           postdec1	equ	0xFE5
   628                           preinc1	equ	0xFE4
   629                           plusw1	equ	0xFE3
   630                           fsr1h	equ	0xFE2
   631                           fsr1l	equ	0xFE1
   632                           bsr	equ	0xFE0
   633                           indf2	equ	0xFDF
   634                           postinc2	equ	0xFDE
   635                           postdec2	equ	0xFDD
   636                           preinc2	equ	0xFDC
   637                           plusw2	equ	0xFDB
   638                           fsr2h	equ	0xFDA
   639                           fsr2l	equ	0xFD9
   640                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     120
                                              0 COMRAM     2     2      0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhhlh       1D      0       0      21        0.0%
BITBIGSFRhhllhh     1C      0       0      22        0.0%
BITBIGSFRhhllhl     19      0       0      23        0.0%
BITBIGSFRhhlll       4      0       0      24        0.0%
BITBIGSFRhll         4      0       0      25        0.0%
BITBIGSFRllhh        3      0       0      26        0.0%
BITBIGSFRllhl       25      0       0      27        0.0%
BITBIGSFRlll         8      0       0      28        0.0%
ABS                  0      0       0      29        0.0%
BIGRAM             7FF      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jun 27 13:16:40 2022

                            l60 7F62                              l39 7FA2                              l72 7FB0  
                            l57 7F50                              l74 7FD6                              u10 7FD2  
                            u11 7FCE                              u20 7FF8                              u21 7FF4  
                            u37 7FB6                              u47 7FDC                             l760 7F88  
                           l762 7FA0                             l754 7F64                             l770 7FA4  
                           l764 7F52                             l756 7F7C                             l780 7FB4  
                           l772 7FA8                             l758 7F86                             l766 7F48  
                           l790 7FDA                             l782 7FBA                             l774 7FAC  
                           l792 7FE0                             l784 7FC2                             l794 7FE8  
                           l786 7FD2                             wreg 000FE8                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            _LATD 000F8C  
                          _LATE 000F8D                            _WPUB 000F85                            _main 7FA4  
                          start 0000                    ___param_bank 000000   __end_of_OSCILLATOR_Initialize 7F64  
                         ?_main 0001                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                         main@i 0002                           status 000FD8                 __initialization 7F42  
                  __end_of_main 8000                          ??_main 0001                   __activetblptr 000000  
                        _ACTCON 000FB5                          _ANSELA 000F5B                          _ANSELB 000F5C  
                        _ANSELC 000F5D                          _ANSELD 000F5E                          _ANSELE 000F5F  
                        _OSCCON 000FD3                          isa$std 000001               _SYSTEM_Initialize 7F48  
                    __accesstop 0060         __end_of__initialization 7F42              ?_SYSTEM_Initialize 0001  
                 ___rparam_used 000001                  __pcstackCOMRAM 0001             ??_SYSTEM_Initialize 0001  
     __end_of_SYSTEM_Initialize 7F52                         _OSCCON2 000FD2                         _OSCTUNE 000F9B  
                       __Hparam 0000                         __Lparam 0000                         __pcinit 7F42  
                       __ramtop 0800                         __ptext0 7FA4                         __ptext1 7F48  
                       __ptext2 7F64                         __ptext3 7F52           _OSCILLATOR_Initialize 7F52  
      ??_PIN_MANAGER_Initialize 0001                         main@pos 0001            end_of_initialization 7F42  
        ?_OSCILLATOR_Initialize 0001             start_initialization 7F42          _PIN_MANAGER_Initialize 7F64  
                   _INTCON2bits 000FF1                        __Hrparam 0000                        __Lrparam 0000  
       ??_OSCILLATOR_Initialize 0001                        isa$xinst 000000                      _INTCONbits 000FF2  
       ?_PIN_MANAGER_Initialize 0001  __end_of_PIN_MANAGER_Initialize 7FA4  
