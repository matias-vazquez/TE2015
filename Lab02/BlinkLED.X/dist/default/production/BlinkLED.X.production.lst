

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jun 30 00:37:29 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.35
    17                           ; Generated 05/05/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K50 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _TRISD	set	3989
    52  0000                     _TRISC	set	3988
    53  0000                     _TRISB	set	3987
    54  0000                     _LATC	set	3979
    55  0000                     _LATB	set	3978
    56  0000                     _LATBbits	set	3978
    57  0000                     _ANSELA	set	3931
    58  0000                     _ANSELB	set	3932
    59  0000                     _ANSELC	set	3933
    60  0000                     _ANSELD	set	3934
    61  0000                     _LATA	set	3977
    62  0000                     _LATD	set	3980
    63  0000                     _LATE	set	3981
    64  0000                     _OSCTUNE	set	3995
    65  0000                     _OSCCON2	set	4050
    66  0000                     _OSCCON	set	4051
    67  0000                     _INTCON2bits	set	4081
    68  0000                     _ACTCON	set	4021
    69  0000                     _TRISA	set	3986
    70  0000                     _TRISE	set	3990
    71  0000                     _WPUB	set	3973
    72  0000                     _ANSELE	set	3935
    73  0000                     _INTCONbits	set	4082
    74                           
    75                           ; #config settings
    76                           
    77                           	psect	cinit
    78  007F62                     __pcinit:
    79                           	callstack 0
    80  007F62                     start_initialization:
    81                           	callstack 0
    82  007F62                     __initialization:
    83                           	callstack 0
    84  007F62                     end_of_initialization:
    85                           	callstack 0
    86  007F62                     __end_of__initialization:
    87                           	callstack 0
    88  007F62  0100               	movlb	0
    89  007F64  EFC2  F03F         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	cstackCOMRAM
    92  000001                     __pcstackCOMRAM:
    93                           	callstack 0
    94  000001                     ??_main:
    95                           
    96                           ; 1 bytes @ 0x0
    97  000001                     	ds	1
    98                           
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 49 in file "main.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;		None
   107 ;; Auto vars:     Size  Location     Type
   108 ;;		None
   109 ;; Return value:  Size  Location     Type
   110 ;;                  1    wreg      void 
   111 ;; Registers used:
   112 ;;		wreg, status,2, status,0, cstack
   113 ;; Tracked objects:
   114 ;;		On entry : 0/0
   115 ;;		On exit  : 0/0
   116 ;;		Unchanged: 0/0
   117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   118 ;;      Params:         0       0       0       0       0       0       0       0       0
   119 ;;      Locals:         0       0       0       0       0       0       0       0       0
   120 ;;      Temps:          1       0       0       0       0       0       0       0       0
   121 ;;      Totals:         1       0       0       0       0       0       0       0       0
   122 ;;Total ram usage:        1 bytes
   123 ;; Hardware stack levels required when called: 2
   124 ;; This function calls:
   125 ;;		_SYSTEM_Initialize
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132  007F84                     __ptext0:
   133                           	callstack 0
   134  007F84                     _main:
   135                           	callstack 29
   136  007F84                     
   137                           ;main.c: 52:     SYSTEM_Initialize();
   138  007F84  ECB4  F03F         	call	_SYSTEM_Initialize	;wreg free
   139  007F88                     l770:
   140  007F88  B08A               	btfsc	138,0,c	;volatile
   141  007F8A  EFC9  F03F         	goto	u11
   142  007F8E  EFCC  F03F         	goto	u10
   143  007F92                     u11:
   144  007F92  0E01               	movlw	1
   145  007F94  EFCD  F03F         	goto	u16
   146  007F98                     u10:
   147  007F98  0E00               	movlw	0
   148  007F9A                     u16:
   149  007F9A  0AFF               	xorlw	255
   150  007F9C  6E01               	movwf	??_main^0,c
   151  007F9E  508A               	movf	138,w,c	;volatile
   152  007FA0  1801               	xorwf	??_main^0,w,c
   153  007FA2  0BFE               	andlw	-2
   154  007FA4  1801               	xorwf	??_main^0,w,c
   155  007FA6  6E8A               	movwf	138,c	;volatile
   156  007FA8                     
   157                           ;main.c: 74:     _delay((unsigned long)((500)*(1000000/4000.0)));
   158  007FA8  0EA3               	movlw	163
   159  007FAA  6E01               	movwf	??_main^0,c
   160  007FAC  0E55               	movlw	85
   161  007FAE                     u27:
   162  007FAE  2EE8               	decfsz	wreg,f,c
   163  007FB0  D7FE               	bra	u27
   164  007FB2  2E01               	decfsz	??_main^0,f,c
   165  007FB4  D7FC               	bra	u27
   166  007FB6  F000               	nop	
   167  007FB8  EFC4  F03F         	goto	l770
   168  007FBC  EF00  F000         	goto	start
   169  007FC0                     __end_of_main:
   170                           	callstack 0
   171                           
   172 ;; *************** function _SYSTEM_Initialize *****************
   173 ;; Defined at:
   174 ;;		line 50 in file "mcc_generated_files/mcc.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;		None
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, status,2, cstack
   183 ;; Tracked objects:
   184 ;;		On entry : 0/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   188 ;;      Params:         0       0       0       0       0       0       0       0       0
   189 ;;      Locals:         0       0       0       0       0       0       0       0       0
   190 ;;      Temps:          0       0       0       0       0       0       0       0       0
   191 ;;      Totals:         0       0       0       0       0       0       0       0       0
   192 ;;Total ram usage:        0 bytes
   193 ;; Hardware stack levels used: 1
   194 ;; Hardware stack levels required when called: 1
   195 ;; This function calls:
   196 ;;		_OSCILLATOR_Initialize
   197 ;;		_PIN_MANAGER_Initialize
   198 ;; This function is called by:
   199 ;;		_main
   200 ;; This function uses a non-reentrant model
   201 ;;
   202                           
   203                           	psect	text1
   204  007F68                     __ptext1:
   205                           	callstack 0
   206  007F68                     _SYSTEM_Initialize:
   207                           	callstack 29
   208  007F68                     
   209                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   210  007F68  ECE0  F03F         	call	_PIN_MANAGER_Initialize	;wreg free
   211                           
   212                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   213  007F6C  ECB9  F03F         	call	_OSCILLATOR_Initialize	;wreg free
   214  007F70  0012               	return		;funcret
   215  007F72                     __end_of_SYSTEM_Initialize:
   216                           	callstack 0
   217                           
   218 ;; *************** function _PIN_MANAGER_Initialize *****************
   219 ;; Defined at:
   220 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg, status,2
   229 ;; Tracked objects:
   230 ;;		On entry : 0/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   234 ;;      Params:         0       0       0       0       0       0       0       0       0
   235 ;;      Locals:         0       0       0       0       0       0       0       0       0
   236 ;;      Temps:          0       0       0       0       0       0       0       0       0
   237 ;;      Totals:         0       0       0       0       0       0       0       0       0
   238 ;;Total ram usage:        0 bytes
   239 ;; Hardware stack levels used: 1
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		_SYSTEM_Initialize
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	text2
   248  007FC0                     __ptext2:
   249                           	callstack 0
   250  007FC0                     _PIN_MANAGER_Initialize:
   251                           	callstack 29
   252  007FC0                     
   253                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   254  007FC0  0E00               	movlw	0
   255  007FC2  6E8D               	movwf	141,c	;volatile
   256                           
   257                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   258  007FC4  0E00               	movlw	0
   259  007FC6  6E8C               	movwf	140,c	;volatile
   260                           
   261                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   262  007FC8  0E00               	movlw	0
   263  007FCA  6E89               	movwf	137,c	;volatile
   264                           
   265                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   266  007FCC  0E00               	movlw	0
   267  007FCE  6E8A               	movwf	138,c	;volatile
   268                           
   269                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   270  007FD0  0E00               	movlw	0
   271  007FD2  6E8B               	movwf	139,c	;volatile
   272                           
   273                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   274  007FD4  0E07               	movlw	7
   275  007FD6  6E96               	movwf	150,c	;volatile
   276  007FD8                     
   277                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   278  007FD8  6892               	setf	146,c	;volatile
   279                           
   280                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFE;
   281  007FDA  0EFE               	movlw	254
   282  007FDC  6E93               	movwf	147,c	;volatile
   283                           
   284                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xC7;
   285  007FDE  0EC7               	movlw	199
   286  007FE0  6E94               	movwf	148,c	;volatile
   287  007FE2                     
   288                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   289  007FE2  6895               	setf	149,c	;volatile
   290  007FE4                     
   291                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
   292  007FE4  010F               	movlb	15	; () banked
   293  007FE6  695E               	setf	94,b	;volatile
   294                           
   295                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC4;
   296  007FE8  0EC4               	movlw	196
   297  007FEA  6F5D               	movwf	93,b	;volatile
   298                           
   299                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3E;
   300  007FEC  0E3E               	movlw	62
   301  007FEE  6F5C               	movwf	92,b	;volatile
   302                           
   303                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   304  007FF0  0E07               	movlw	7
   305  007FF2  6F5F               	movwf	95,b	;volatile
   306                           
   307                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x2F;
   308  007FF4  0E2F               	movlw	47
   309  007FF6  6F5B               	movwf	91,b	;volatile
   310                           
   311                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   312  007FF8  0E00               	movlw	0
   313  007FFA  6E85               	movwf	133,c	;volatile
   314  007FFC                     
   315                           ; BSR set to: 15
   316                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
   317  007FFC  8EF1               	bsf	241,7,c	;volatile
   318  007FFE                     
   319                           ; BSR set to: 15
   320  007FFE  0012               	return		;funcret
   321  008000                     __end_of_PIN_MANAGER_Initialize:
   322                           	callstack 0
   323                           
   324 ;; *************** function _OSCILLATOR_Initialize *****************
   325 ;; Defined at:
   326 ;;		line 57 in file "mcc_generated_files/mcc.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   340 ;;      Params:         0       0       0       0       0       0       0       0       0
   341 ;;      Locals:         0       0       0       0       0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0       0       0       0       0
   343 ;;      Totals:         0       0       0       0       0       0       0       0       0
   344 ;;Total ram usage:        0 bytes
   345 ;; Hardware stack levels used: 1
   346 ;; This function calls:
   347 ;;		Nothing
   348 ;; This function is called by:
   349 ;;		_SYSTEM_Initialize
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           	psect	text3
   354  007F72                     __ptext3:
   355                           	callstack 0
   356  007F72                     _OSCILLATOR_Initialize:
   357                           	callstack 29
   358  007F72                     
   359                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x32;
   360  007F72  0E32               	movlw	50
   361  007F74  6ED3               	movwf	211,c	;volatile
   362                           
   363                           ;mcc_generated_files/mcc.c: 62:     OSCCON2 = 0x00;
   364  007F76  0E00               	movlw	0
   365  007F78  6ED2               	movwf	210,c	;volatile
   366                           
   367                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
   368  007F7A  0E00               	movlw	0
   369  007F7C  6E9B               	movwf	155,c	;volatile
   370                           
   371                           ;mcc_generated_files/mcc.c: 66:     ACTCON = 0x00;
   372  007F7E  0E00               	movlw	0
   373  007F80  6EB5               	movwf	181,c	;volatile
   374  007F82  0012               	return		;funcret
   375  007F84                     __end_of_OSCILLATOR_Initialize:
   376                           	callstack 0
   377  0000                     
   378                           	psect	rparam
   379  0000                     
   380                           	psect	idloc
   381                           
   382                           ;Config register IDLOC0 @ 0x200000
   383                           ;	unspecified, using default values
   384  200000                     	org	2097152
   385  200000  FF                 	db	255
   386                           
   387                           ;Config register IDLOC1 @ 0x200001
   388                           ;	unspecified, using default values
   389  200001                     	org	2097153
   390  200001  FF                 	db	255
   391                           
   392                           ;Config register IDLOC2 @ 0x200002
   393                           ;	unspecified, using default values
   394  200002                     	org	2097154
   395  200002  FF                 	db	255
   396                           
   397                           ;Config register IDLOC3 @ 0x200003
   398                           ;	unspecified, using default values
   399  200003                     	org	2097155
   400  200003  FF                 	db	255
   401                           
   402                           ;Config register IDLOC4 @ 0x200004
   403                           ;	unspecified, using default values
   404  200004                     	org	2097156
   405  200004  FF                 	db	255
   406                           
   407                           ;Config register IDLOC5 @ 0x200005
   408                           ;	unspecified, using default values
   409  200005                     	org	2097157
   410  200005  FF                 	db	255
   411                           
   412                           ;Config register IDLOC6 @ 0x200006
   413                           ;	unspecified, using default values
   414  200006                     	org	2097158
   415  200006  FF                 	db	255
   416                           
   417                           ;Config register IDLOC7 @ 0x200007
   418                           ;	unspecified, using default values
   419  200007                     	org	2097159
   420  200007  FF                 	db	255
   421                           
   422                           	psect	config
   423                           
   424                           ;Config register CONFIG1L @ 0x300000
   425                           ;	PLL Selection
   426                           ;	PLLSEL = PLL4X, 4x clock multiplier
   427                           ;	PLL Enable Configuration bit
   428                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   429                           ;	CPU System Clock Postscaler
   430                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   431                           ;	Low Speed USB mode with 48 MHz system clock
   432                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   433  300000                     	org	3145728
   434  300000  00                 	db	0
   435                           
   436                           ;Config register CONFIG1H @ 0x300001
   437                           ;	Oscillator Selection
   438                           ;	FOSC = INTOSCIO, Internal oscillator
   439                           ;	Primary Oscillator Shutdown
   440                           ;	PCLKEN = ON, Primary oscillator enabled
   441                           ;	Fail-Safe Clock Monitor
   442                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   443                           ;	Internal/External Oscillator Switchover
   444                           ;	IESO = OFF, Oscillator Switchover mode disabled
   445  300001                     	org	3145729
   446  300001  28                 	db	40
   447                           
   448                           ;Config register CONFIG2L @ 0x300002
   449                           ;	Power-up Timer Enable
   450                           ;	nPWRTEN = OFF, Power up timer disabled
   451                           ;	Brown-out Reset Enable
   452                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   453                           ;	Brown-out Reset Voltage
   454                           ;	BORV = 190, BOR set to 1.9V nominal
   455                           ;	Low-Power Brown-out Reset
   456                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   457  300002                     	org	3145730
   458  300002  5F                 	db	95
   459                           
   460                           ;Config register CONFIG2H @ 0x300003
   461                           ;	Watchdog Timer Enable bits
   462                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   463                           ;	Watchdog Timer Postscaler
   464                           ;	WDTPS = 32768, 1:32768
   465  300003                     	org	3145731
   466  300003  3C                 	db	60
   467                           
   468                           ; Padding undefined space
   469  300004                     	org	3145732
   470  300004  FF                 	db	255
   471                           
   472                           ;Config register CONFIG3H @ 0x300005
   473                           ;	CCP2 MUX bit
   474                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   475                           ;	PORTB A/D Enable bit
   476                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   477                           ;	Timer3 Clock Input MUX bit
   478                           ;	T3CMX = RC0, T3CKI function is on RC0
   479                           ;	SDO Output MUX bit
   480                           ;	SDOMX = RB3, SDO function is on RB3
   481                           ;	Master Clear Reset Pin Enable
   482                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   483  300005                     	org	3145733
   484  300005  D3                 	db	211
   485                           
   486                           ;Config register CONFIG4L @ 0x300006
   487                           ;	Stack Full/Underflow Reset
   488                           ;	STVREN = ON, Stack full/underflow will cause Reset
   489                           ;	Single-Supply ICSP Enable bit
   490                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   491                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   492                           ;	ICPRT = OFF, ICPORT disabled
   493                           ;	Extended Instruction Set Enable bit
   494                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   495                           ;	Background Debugger Enable bit
   496                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   497  300006                     	org	3145734
   498  300006  85                 	db	133
   499                           
   500                           ; Padding undefined space
   501  300007                     	org	3145735
   502  300007  FF                 	db	255
   503                           
   504                           ;Config register CONFIG5L @ 0x300008
   505                           ;	Block 0 Code Protect
   506                           ;	CP0 = OFF, Block 0 is not code-protected
   507                           ;	Block 1 Code Protect
   508                           ;	CP1 = OFF, Block 1 is not code-protected
   509                           ;	Block 2 Code Protect
   510                           ;	CP2 = OFF, Block 2 is not code-protected
   511                           ;	Block 3 Code Protect
   512                           ;	CP3 = OFF, Block 3 is not code-protected
   513  300008                     	org	3145736
   514  300008  0F                 	db	15
   515                           
   516                           ;Config register CONFIG5H @ 0x300009
   517                           ;	Boot Block Code Protect
   518                           ;	CPB = OFF, Boot block is not code-protected
   519                           ;	Data EEPROM Code Protect
   520                           ;	CPD = OFF, Data EEPROM is not code-protected
   521  300009                     	org	3145737
   522  300009  C0                 	db	192
   523                           
   524                           ;Config register CONFIG6L @ 0x30000A
   525                           ;	Block 0 Write Protect
   526                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   527                           ;	Block 1 Write Protect
   528                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   529                           ;	Block 2 Write Protect
   530                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   531                           ;	Block 3 Write Protect
   532                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   533  30000A                     	org	3145738
   534  30000A  0F                 	db	15
   535                           
   536                           ;Config register CONFIG6H @ 0x30000B
   537                           ;	Configuration Registers Write Protect
   538                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   539                           ;	Boot Block Write Protect
   540                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   541                           ;	Data EEPROM Write Protect
   542                           ;	WRTD = OFF, Data EEPROM is not write-protected
   543  30000B                     	org	3145739
   544  30000B  E0                 	db	224
   545                           
   546                           ;Config register CONFIG7L @ 0x30000C
   547                           ;	Block 0 Table Read Protect
   548                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   549                           ;	Block 1 Table Read Protect
   550                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   551                           ;	Block 2 Table Read Protect
   552                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   553                           ;	Block 3 Table Read Protect
   554                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   555  30000C                     	org	3145740
   556  30000C  0F                 	db	15
   557                           
   558                           ;Config register CONFIG7H @ 0x30000D
   559                           ;	Boot Block Table Read Protect
   560                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   561  30000D                     	org	3145741
   562  30000D  40                 	db	64
   563                           tosu	equ	0xFFF
   564                           tosh	equ	0xFFE
   565                           tosl	equ	0xFFD
   566                           stkptr	equ	0xFFC
   567                           pclatu	equ	0xFFB
   568                           pclath	equ	0xFFA
   569                           pcl	equ	0xFF9
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           prodh	equ	0xFF4
   575                           prodl	equ	0xFF3
   576                           indf0	equ	0xFEF
   577                           postinc0	equ	0xFEE
   578                           postdec0	equ	0xFED
   579                           preinc0	equ	0xFEC
   580                           plusw0	equ	0xFEB
   581                           fsr0h	equ	0xFEA
   582                           fsr0l	equ	0xFE9
   583                           wreg	equ	0xFE8
   584                           indf1	equ	0xFE7
   585                           postinc1	equ	0xFE6
   586                           postdec1	equ	0xFE5
   587                           preinc1	equ	0xFE4
   588                           plusw1	equ	0xFE3
   589                           fsr1h	equ	0xFE2
   590                           fsr1l	equ	0xFE1
   591                           bsr	equ	0xFE0
   592                           indf2	equ	0xFDF
   593                           postinc2	equ	0xFDE
   594                           postdec2	equ	0xFDD
   595                           preinc2	equ	0xFDC
   596                           plusw2	equ	0xFDB
   597                           fsr2h	equ	0xFDA
   598                           fsr2l	equ	0xFD9
   599                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMRAM     1     1      0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      1       1       1        1.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh          D      0       0      20        0.0%
BITBIGSFRhl         1D      0       0      21        0.0%
BITBIGSFRlhh        1C      0       0      22        0.0%
BITBIGSFRlhl        19      0       0      23        0.0%
BITBIGSFRllhh        4      0       0      24        0.0%
BITBIGSFRllhll       4      0       0      25        0.0%
BITBIGSFRllllhh      3      0       0      26        0.0%
BITBIGSFRllllhl     25      0       0      27        0.0%
BITBIGSFRlllll       8      0       0      28        0.0%
ABS                  0      0       0      29        0.0%
BIGRAM             7FF      0       0      30        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jun 30 00:37:29 2022

                            l15 7F70                              l18 7F82                              l57 7FFE  
                            u10 7F98                              u11 7F92                              u16 7F9A  
                            u27 7FAE                             l760 7FFC                             l752 7FC0  
                           l762 7F72                             l754 7FD8                             l770 7F88  
                           l756 7FE2                             l764 7F68                             l772 7FA8  
                           l758 7FE4                             l768 7F84                             wreg 000FE8  
                          _LATA 000F89                            _LATB 000F8A                            _LATC 000F8B  
                          _LATD 000F8C                            _LATE 000F8D                            _WPUB 000F85  
                          _main 7F84                            start 0000                    ___param_bank 000000  
 __end_of_OSCILLATOR_Initialize 7F84                           ?_main 0001                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISD 000F95  
                         _TRISE 000F96                 __initialization 7F62                    __end_of_main 7FC0  
                        ??_main 0001                   __activetblptr 000000                          _ACTCON 000FB5  
                        _ANSELA 000F5B                          _ANSELB 000F5C                          _ANSELC 000F5D  
                        _ANSELD 000F5E                          _ANSELE 000F5F                          _OSCCON 000FD3  
                        isa$std 000001               _SYSTEM_Initialize 7F68                      __accesstop 0060  
       __end_of__initialization 7F62              ?_SYSTEM_Initialize 0001                   ___rparam_used 000001  
                __pcstackCOMRAM 0001             ??_SYSTEM_Initialize 0001       __end_of_SYSTEM_Initialize 7F72  
                       _OSCCON2 000FD2                         _OSCTUNE 000F9B                         __Hparam 0000  
                       __Lparam 0000                         __pcinit 7F62                         __ramtop 0800  
                       __ptext0 7F84                         __ptext1 7F68                         __ptext2 7FC0  
                       __ptext3 7F72           _OSCILLATOR_Initialize 7F72        ??_PIN_MANAGER_Initialize 0001  
          end_of_initialization 7F62          ?_OSCILLATOR_Initialize 0001             start_initialization 7F62  
        _PIN_MANAGER_Initialize 7FC0                        _LATBbits 000F8A                     _INTCON2bits 000FF1  
                      __Hrparam 0000                        __Lrparam 0000         ??_OSCILLATOR_Initialize 0001  
                      isa$xinst 000000                      _INTCONbits 000FF2         ?_PIN_MANAGER_Initialize 0001  
__end_of_PIN_MANAGER_Initialize 8000  
